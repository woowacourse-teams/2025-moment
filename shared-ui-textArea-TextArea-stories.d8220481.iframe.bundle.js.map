{"version":3,"file":"shared-ui-textArea-TextArea-stories.d8220481.iframe.bundle.js","mappings":";AAuBA;ACfA","sources":["webpack://client/./src/shared/ui/textArea/TextArea.styles.ts","webpack://client/./src/shared/ui/textArea/TextArea.tsx"],"sourcesContent":["import { CustomTheme } from '@/app/styles/theme';\nimport styled from '@emotion/styled';\n\nexport type textAreaHeight = 'small' | 'medium' | 'large';\n\nconst TextAreaStyles = {\n  textarea: (theme: CustomTheme, $height: textAreaHeight) => `\n    width: 100%;\n    padding: 20px;\n    background-color: ${theme.colors['gray-600_20']};\n    border-radius: 5px;\n    height: ${theme.typography.textAreaHeight[$height]};\n    color: ${theme.colors.white};\n    border: 1px solid ${theme.colors['gray-700']};\n    resize: none; \n    \n    &::placeholder {\n        color: ${theme.colors.white};\n    }\n    `,\n};\n\nexport const TextArea = styled.textarea<{ $height: textAreaHeight }>`\n  ${({ theme, $height }) => TextAreaStyles.textarea(theme, $height)}\n`;\n","import { textAreaHeight } from './TextArea.styles';\nimport * as S from './TextArea.styles';\n\ninterface TextAreaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  placeholder: string;\n  height: textAreaHeight;\n}\n\nexport const TextArea = ({ placeholder, height, ...props }: TextAreaProps) => {\n  return <S.TextArea placeholder={placeholder} $height={height} {...props} />;\n};\n"],"names":[],"sourceRoot":""}