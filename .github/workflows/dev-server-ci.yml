name: Dev Server CI

on:
#  pull_request:
#    types: [opened, synchronize, reopened, closed]
#    branches: [ develop ]
#    paths: [ 'server/**' ]
  push:
    branches:
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Test with Gradle
        run: ./gradlew test

  build-and-push-docker:
    #if: github.event.pull_request.merged == true
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.repository_url }}
            org.opencontainers.image.revision=${{ github.sha }}

  deploy:
    runs-on: [ self-hosted, backend ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Deploy with Docker Compose
        run: |
          cd /home/ubuntu/2025-moment/server
          sudo docker compose pull app
          sudo docker compose up --no-deps -d app
      - name: Prune old images
        run: docker image prune -f