name: Dev Server CD

on:
  pull_request:
    types: [ closed ]
    branches: [ develop ]
    paths: [ 'server/**' ]
  push:
    branches:
      - develop

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: [ self-hosted, backend ]
    permissions:
      contents: read

    env:
      IMAGE_TAG: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
      DOCKER_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Deploy with Docker Compose
        run: |
          cd /home/ubuntu/2025-moment/server
          
          echo "DOCKER_REPO: $DOCKER_REPO"
          echo "IMAGE_TAG: $IMAGE_TAG"

          echo "DOCKER_REPO=${DOCKER_REPO}" > ./.env.ci
          echo "IMAGE_TAG=${IMAGE_TAG}" >> ./.env.ci

          sudo docker compose --env-file ./.env.ci pull app
          sudo docker compose --env-file ./.env.ci up --no-deps -d app

          rm ./.env.ci
          
          echo "=== Checking if image exists locally ==="
          docker images | grep "$DOCKER_REPO" || echo "No local images found for $DOCKER_REPO"

      - name: Prune old images
        run: docker image prune -f