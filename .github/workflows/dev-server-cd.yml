#name: Dev Server CD
#
#on:
#  workflow_run:
#    workflows: [ "Dev Server CI" ]
#    types: [ completed ]
#    branches: [ develop ]
#
#jobs:
#  deploy-to-aws:
#    if: >
#      github.event.workflow_run.conclusion == 'success' &&
#      github.event.workflow_run.event == 'push'
#    runs-on: ubuntu-latest
#
#    permissions:
#      id-token: write
#      contents: read
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      # 1. AWS 자격 증명 설정
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ap-northeast-2 # 사용하는 리전
#
#      # =============================================================
#      # 'Create .env file' 단계가 완전히 삭제되었습니다.
#      # 이 워크플로우는 환경변수에 대해 아무것도 알 필요가 없습니다.
#      # =============================================================
#
#      # 2. 배포 파일 압축 (appspec.yml과 스크립트만 포함)
#      - name: Zip deployment bundle
#        run: zip -r deploy.zip appspec.yml scripts/ docker-compose.yml
#
#      # 3. S3에 업로드
#      - name: Upload to S3
#        run: |
#          aws s3 cp deploy.zip s3://<여러분의-S3-버킷-이름>/moment-app/${{ github.sha }}.zip
#
#      # 4. AWS CodeDeploy 배포 트리거
#      - name: Trigger CodeDeploy
#        run: |
#          aws deploy create-deployment \
#            --application-name <CodeDeploy-애플리케이션-이름> \
#            --deployment-group-name <CodeDeploy-배포그룹-이름> \
#            --s3-location bucket=<여러분의-S3-버킷-이름>,key=moment-app/${{ github.sha }}.zip,bundleType=zip
