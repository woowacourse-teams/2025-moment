name: Deploy Client to AWS S3 + CloudFront

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    name: Build and Deploy Client
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./client
    env:
      PATH: '/usr/local/bin:/usr/bin:/bin:$PATH'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js with pnpm cache
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: './client/pnpm-lock.yaml' # ✅ 경로 수정

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Create .env file
        run: |
          echo "REACT_APP_BASE_URL=${{ secrets.REACT_APP_BASE_URL }}" > .env
          echo "REACT_APP_GA_ID=${{ secrets.REACT_APP_GA_ID }}" >> .env

      - name: Build application
        run: pnpm run build
        env:
          NODE_ENV: production

      - name: Ensure AWS CLI is installed
        run: |
          echo "Checking AWS CLI..."
          if ! command -v aws &> /dev/null; then
            echo "Installing AWS CLI..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install --update
            rm -rf awscliv2.zip aws/
          else
            echo "AWS CLI is already installed"
          fi

          echo "AWS Version:"
          aws --version

          echo "Verifying AWS credentials..."
          aws sts get-caller-identity

      - name: Upload to S3
        run: |
          echo "Uploading static files to S3..."

          aws s3 sync ./dist s3://${{ secrets.S3_BUCKET_NAME }}/moment \
            --delete \
            --cache-control "public,max-age=31536000,immutable" \
            --exclude "*.html" \
            --exclude "service-worker.js" \
            --region ap-northeast-2

          find ./dist -name "*.html" | while read file; do
            aws s3 cp "$file" s3://${{ secrets.S3_BUCKET_NAME }}/moment/"${file#./dist/}" \
              --cache-control "public,max-age=0,must-revalidate" \
              --content-type "text/html" \
              --region ap-northeast-2
          done

          if [ -f ./dist/service-worker.js ]; then
            aws s3 cp ./dist/service-worker.js s3://${{ secrets.S3_BUCKET_NAME }}/moment/service-worker.js \
              --cache-control "public,max-age=0,must-revalidate" \
              --content-type "application/javascript" \
              --region ap-northeast-2
          fi

      - name: Invalidate CloudFront cache
        run: |
          echo "Invalidating CloudFront cache..."
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*" \
            --region us-east-1
