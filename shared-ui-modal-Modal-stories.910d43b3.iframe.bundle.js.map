{"version":3,"file":"shared-ui-modal-Modal-stories.910d43b3.iframe.bundle.js","mappings":";;;;;AA2DA;AACA;AACA;AACA;;AAEA;AAEA;AAGA;;;;;;;AAOA;AACA;;;;AAMA;;;;;;AAMA;;AAIA;;;AAGA;;AAIA;;;;;;AAQA","sources":["webpack://client/./src/shared/ui/modal/Modal.styles.ts"],"sourcesContent":["import { CustomTheme } from '@/app/styles/theme';\nimport styled from '@emotion/styled';\n\nexport type ModalVariant = 'default' | 'memoji';\nexport type ModalSize = 'small' | 'medium' | 'large';\nexport type ModalPosition = 'center' | 'bottom';\nexport type ExternalModalVariant = (theme: CustomTheme) => string;\n\nconst modalFrameStyles = {\n  default: (\n    theme: CustomTheme,\n    props: { $size: ModalSize; $position: ModalPosition; $height?: string },\n  ) => `\n    background-color: ${theme.colors['slate-800']};\n    border-radius: 10px;\n    border: 1px solid ${theme.colors['gray-700']};\n    padding: 20px 30px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n    width: ${props.$position === 'center' ? theme.typography.modalWidth[props.$size].desktop : '100%'};\n    height: ${props.$height || 'auto'};\n\n    ${theme.mediaQueries.tablet} {\n      padding: 16px 24px;\n      width: ${props.$position === 'center' ? theme.typography.modalWidth[props.$size].tablet : '100%'};\n    }\n    \n    ${theme.mediaQueries.mobile} {\n      padding: 12px 20px;\n      width: ${props.$position === 'center' ? theme.typography.modalWidth[props.$size].mobile : '100%'};\n    }\n  `,\n\n  memoji: (theme: CustomTheme) => `\n    background-color: ${theme.colors['slate-800']};\n    border-radius: 10px;\n    border: 1px solid ${theme.colors['gray-700']};\n    padding: 20px 30px;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n\n    width: 520px;\n    height: 520px;\n    \n    ${theme.mediaQueries.mobile} {\n      padding: 16px 28px;\n      width: 90%;\n    }\n  `,\n};\n\nexport const ModalFrame = styled.div<{\n  $position: 'center' | 'bottom';\n  $size: 'small' | 'medium' | 'large';\n  $height?: string;\n  variant: ModalVariant;\n  externalVariant?: ExternalModalVariant;\n}>`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  position: ${({ $position }) => ($position === 'center' ? 'relative' : 'fixed')};\n  bottom: ${({ $position }) => ($position === 'bottom' ? '0' : 'auto')};\n  left: ${({ $position }) => ($position === 'bottom' ? '50%' : 'auto')};\n  transform: ${({ $position }) => ($position === 'bottom' ? 'translateX(-50%)' : 'none')};\n\n  ${({ theme, variant, $size, $position, $height }) =>\n    modalFrameStyles[variant](theme, { $size, $position, $height })};\n  ${({ theme, externalVariant }) => externalVariant && externalVariant(theme)};\n`;\n\nexport const ModalWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  width: 100dvw;\n  height: 100dvh;\n  background-color: ${({ theme }) => theme.colors.black_70};\n  color: ${({ theme }) => theme.colors.white};\n  z-index: 1000;\n  left: 0;\n  top: 0;\n`;\n\nexport const ModalCloseButton = styled.button`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors['gray-700']};\n  }\n`;\n\nexport const ModalHeader = styled.div<{ $hasTitle: boolean }>`\n  display: flex;\n  width: 100%;\n  justify-content: ${({ $hasTitle }) => ($hasTitle ? 'space-between' : 'right')};\n  align-items: center;\n`;\n\nexport const ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  gap: 10px;\n  overflow-y: auto;\n`;\n\nexport const ModalFooter = styled.div`\n  display: flex;\n  /* width: 100%; */\n  justify-content: flex-end;\n  gap: 10px;\n`;\n"],"names":[],"sourceRoot":""}