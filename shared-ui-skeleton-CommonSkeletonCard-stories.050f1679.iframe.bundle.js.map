{"version":3,"file":"shared-ui-skeleton-CommonSkeletonCard-stories.050f1679.iframe.bundle.js","mappings":";;;;;;;AAaA;AAKA;AACA;AACA;;;AAIA;AACA;AACA;;;AAGA;AAGA;;;AAGA;ACzBA;;;;AAAA;;;;ACHA;AACA;;AAEA;;AAEA;;;;AAIA;;AAIA;;;;AAMA;;;;;AAcA;;;;;AAAA;;;;;;;;;AAWA;;;;AAYA;;;;AAAA;;;;AAIA;;AAEA;AACA;;AAIA;;;;AAIA;;AAEA;AACA;;AAIA;;;;AAMA;;;AAKA;;;AAKA;;;;;;;AC7FA","sources":["webpack://client/./src/shared/ui/skeleton/Skeleton.styles.ts","webpack://client/./src/shared/ui/skeleton/Skeleton.tsx","webpack://client/./src/shared/ui/skeleton/CommonSkeletonCard.styles.ts","webpack://client/./src/shared/ui/skeleton/CommonSkeletonCard.tsx"],"sourcesContent":["import { theme } from '@/app/styles/theme';\nimport { keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nconst shimmer = keyframes`\n  0% {\n    background-position: -200px 0;\n  }\n  100% {\n    background-position: calc(200px + 100%) 0;\n  }\n`;\n\nexport const SkeletonContainer = styled.div<{\n  width: string | number;\n  height: string | number;\n  borderRadius: string | number;\n}>`\n  width: ${({ width }) => (typeof width === 'number' ? `${width}px` : width)};\n  height: ${({ height }) => (typeof height === 'number' ? `${height}px` : height)};\n  border-radius: ${({ borderRadius }) =>\n    typeof borderRadius === 'number' ? `${borderRadius}px` : borderRadius};\n  background: linear-gradient(\n    90deg,\n    ${theme.colors['slate-800_60']} 25%,\n    ${theme.colors['gray-700']} 50%,\n    ${theme.colors['slate-800_60']} 75%\n  );\n  background-size: 200px 100%;\n  animation: ${shimmer} 4s ease-in-out infinite;\n`;\n\nexport const SkeletonTextContainer = styled.div<{ gap: string }>`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ gap }) => gap};\n`;\n\nexport const SkeletonCardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n","import React from 'react';\nimport * as S from './Skeleton.styles';\n\ninterface SkeletonProps {\n  width?: string | number;\n  height?: string | number;\n  borderRadius?: string | number;\n  className?: string;\n}\n\nexport const Skeleton: React.FC<SkeletonProps> = ({\n  width = '100%',\n  height = '1rem',\n  borderRadius = '4px',\n  className,\n}) => {\n  return (\n    <S.SkeletonContainer\n      width={width}\n      height={height}\n      borderRadius={borderRadius}\n      className={className}\n    />\n  );\n};\n\ninterface SkeletonTextProps {\n  lines?: number;\n  lineHeight?: string;\n  gap?: string;\n}\n\nexport const SkeletonText: React.FC<SkeletonTextProps> = ({\n  lines = 1,\n  lineHeight = '1rem',\n  gap = '0.5rem',\n}) => {\n  return (\n    <S.SkeletonTextContainer gap={gap}>\n      {Array.from({ length: lines }).map((_, index) => (\n        <Skeleton key={index} height={lineHeight} width={index === lines - 1 ? '75%' : '100%'} />\n      ))}\n    </S.SkeletonTextContainer>\n  );\n};\n","import { theme } from '@/app/styles/theme';\nimport styled from '@emotion/styled';\n\nexport const SkeletonCard = styled.div<{ variant?: 'moment' | 'comment' }>`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: ${({ variant }) => (variant === 'moment' ? '100%' : theme.typography.cardWidth.medium)};\n  height: ${({ variant }) => (variant === 'moment' ? '350px' : 'auto')};\n  padding: 20px 30px;\n  background-color: ${theme.colors['slate-800_60']};\n  border-radius: 10px;\n  border: 1px solid ${theme.colors['gray-700']};\n  word-break: keep-all;\n\n  @media (max-width: 768px) {\n    width: ${({ variant }) => (variant === 'moment' ? '100%' : '90%')};\n  }\n`;\n\nexport const SkeletonCardTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const SkeletonTitleRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  gap: 4px;\n`;\n\nexport const SkeletonCardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const SkeletonSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 10px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const SkeletonSectionHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const SkeletonContentHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const SkeletonSimpleCard = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 10px 16px;\n  background-color: ${theme.colors['gray-600_20']};\n  border-radius: 5px;\n  height: ${theme.typography.textAreaHeight.small};\n  border: 1px solid ${theme.colors['gray-700']};\n  align-items: center;\n`;\n\nexport const SkeletonYellowCard = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 10px 16px;\n  background-color: ${theme.colors['yellow-300_10']};\n  border-radius: 5px;\n  height: ${theme.typography.textAreaHeight.small};\n  border: 1px solid ${theme.colors['gray-700']};\n  align-items: center;\n`;\n\nexport const SkeletonCardAction = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const SkeletonActionButtons = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const SkeletonEmojiContainer = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const SkeletonMomentContent = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n","import { Skeleton, SkeletonText } from '@/shared/ui/skeleton/Skeleton';\nimport React from 'react';\nimport * as S from './CommonSkeletonCard.styles';\n\ninterface CommonSkeletonCardProps {\n  variant?: 'moment' | 'comment';\n}\n\nexport const CommonSkeletonCard: React.FC<CommonSkeletonCardProps> = ({ variant = 'moment' }) => {\n  return (\n    <S.SkeletonCard variant={variant}>\n      <S.SkeletonCardTitle>\n        <S.SkeletonTitleRow>\n          <Skeleton width=\"16px\" height=\"16px\" borderRadius=\"50%\" />\n          <Skeleton width=\"120px\" height=\"16px\" />\n        </S.SkeletonTitleRow>\n        <SkeletonText lines={2} lineHeight=\"18px\" />\n      </S.SkeletonCardTitle>\n\n      {variant === 'moment' && (\n        <S.SkeletonMomentContent>\n          <SkeletonText lines={3} lineHeight=\"18px\" />\n        </S.SkeletonMomentContent>\n      )}\n\n      {variant === 'comment' && (\n        <>\n          <S.SkeletonSection>\n            <S.SkeletonSectionHeader>\n              <Skeleton width=\"20px\" height=\"20px\" borderRadius=\"50%\" />\n              <Skeleton width=\"100px\" height=\"16px\" />\n            </S.SkeletonSectionHeader>\n            <S.SkeletonSimpleCard>\n              <SkeletonText lines={2} lineHeight=\"16px\" />\n            </S.SkeletonSimpleCard>\n          </S.SkeletonSection>\n\n          <S.SkeletonSection>\n            <S.SkeletonSectionHeader>\n              <Skeleton width=\"20px\" height=\"20px\" borderRadius=\"50%\" />\n              <Skeleton width=\"120px\" height=\"16px\" />\n            </S.SkeletonSectionHeader>\n            <S.SkeletonYellowCard>\n              <SkeletonText lines={1} lineHeight=\"16px\" />\n            </S.SkeletonYellowCard>\n          </S.SkeletonSection>\n\n          <S.SkeletonSection>\n            <S.SkeletonSectionHeader>\n              <Skeleton width=\"20px\" height=\"20px\" borderRadius=\"50%\" />\n              <Skeleton width=\"100px\" height=\"16px\" />\n            </S.SkeletonSectionHeader>\n            <S.SkeletonEmojiContainer>\n              <Skeleton width=\"32px\" height=\"32px\" borderRadius=\"50%\" />\n              <Skeleton width=\"32px\" height=\"32px\" borderRadius=\"50%\" />\n              <Skeleton width=\"32px\" height=\"32px\" borderRadius=\"50%\" />\n            </S.SkeletonEmojiContainer>\n          </S.SkeletonSection>\n\n          <S.SkeletonCardAction>\n            <S.SkeletonActionButtons>\n              <Skeleton width=\"40px\" height=\"32px\" borderRadius=\"20px\" />\n              <Skeleton width=\"40px\" height=\"32px\" borderRadius=\"20px\" />\n              <Skeleton width=\"40px\" height=\"32px\" borderRadius=\"20px\" />\n            </S.SkeletonActionButtons>\n          </S.SkeletonCardAction>\n        </>\n      )}\n    </S.SkeletonCard>\n  );\n};\n"],"names":[],"sourceRoot":""}